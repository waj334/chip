#ifndef _PERIPHERALS_MDMA_TD
#define _PERIPHERALS_MDMA_TD

include "base.td"

def MDMAPeripheral : PeripheralType<"MDMA", "MDMA"> {
  let accessWidth = 32;
  let registers = [
    Register<"MDMA_GISR0", 0x0, 32, [
      Field<"GIF0", 0, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF1", 1, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF2", 2, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF3", 3, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF4", 4, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF5", 5, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF6", 6, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF7", 7, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF8", 8, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF9", 9, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF10", 10, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF11", 11, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF12", 12, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF13", 13, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF14", 14, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
      Field<"GIF15", 15, 1, ReadWrite, "Channel x global interrupt flag (x=...) This bit is set and reset by hardware. It is a logical OR of all the Channel x interrupt flags (CTCIFx, BTIFx, BRTIFx, TEIFx) which are enabled in the interrupt mask register (CTCIEx, BTIEx, BRTIEx, TEIEx)">,
    ], "MDMA Global Interrupt/Status Register">,
    Register<"MDMA_C0ISR", 0x40, 32, [
      Field<"TEIF0", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF0", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF0", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF0", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF0", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA0", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C0IFCR", 0x44, 32, [
      Field<"CTEIF0", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF0", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF0", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF0", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF0", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C0ESR", 0x48, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C0CR", 0x4c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C0TCR", 0x50, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C0BNDTR", 0x54, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C0SAR", 0x58, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C0DAR", 0x5c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C0BRUR", 0x60, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C0LAR", 0x64, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C0TBR", 0x68, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C0MAR", 0x70, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C0MDR", 0x74, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C1ISR", 0x80, 32, [
      Field<"TEIF1", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF1", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF1", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF1", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF1", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA1", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C1IFCR", 0x84, 32, [
      Field<"CTEIF1", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF1", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF1", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF1", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF1", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C1ESR", 0x88, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C1CR", 0x8c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C1TCR", 0x90, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C1BNDTR", 0x94, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C1SAR", 0x98, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C1DAR", 0x9c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C1BRUR", 0xa0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C1LAR", 0xa4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C1TBR", 0xa8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C1MAR", 0xb0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C1MDR", 0xb4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C2ISR", 0xc0, 32, [
      Field<"TEIF2", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF2", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF2", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF2", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF2", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA2", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C2IFCR", 0xc4, 32, [
      Field<"CTEIF2", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF2", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF2", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF2", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF2", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C2ESR", 0xc8, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C2CR", 0xcc, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C2TCR", 0xd0, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C2BNDTR", 0xd4, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C2SAR", 0xd8, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C2DAR", 0xdc, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C2BRUR", 0xe0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C2LAR", 0xe4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C2TBR", 0xe8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C2MAR", 0xf0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C2MDR", 0xf4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C3ISR", 0x100, 32, [
      Field<"TEIF3", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF3", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF3", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF3", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF3", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA3", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C3IFCR", 0x104, 32, [
      Field<"CTEIF3", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF3", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF3", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF3", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF3", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C3ESR", 0x108, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C3CR", 0x10c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C3TCR", 0x110, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C3BNDTR", 0x114, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C3SAR", 0x118, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C3DAR", 0x11c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C3BRUR", 0x120, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C3LAR", 0x124, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C3TBR", 0x128, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C3MAR", 0x130, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C3MDR", 0x134, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C4ISR", 0x140, 32, [
      Field<"TEIF4", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF4", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF4", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF4", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF4", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA4", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C4IFCR", 0x144, 32, [
      Field<"CTEIF4", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF4", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF4", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF4", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF4", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C4ESR", 0x148, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C4CR", 0x14c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C4TCR", 0x150, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C4BNDTR", 0x154, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C4SAR", 0x158, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C4DAR", 0x15c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C4BRUR", 0x160, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C4LAR", 0x164, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C4TBR", 0x168, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C4MAR", 0x170, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C4MDR", 0x174, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C5ISR", 0x180, 32, [
      Field<"TEIF5", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF5", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF5", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF5", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF5", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA5", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C5IFCR", 0x184, 32, [
      Field<"CTEIF5", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF5", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF5", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF5", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF5", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C5ESR", 0x188, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C5CR", 0x18c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C5TCR", 0x190, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C5BNDTR", 0x194, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C5SAR", 0x198, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C5DAR", 0x19c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C5BRUR", 0x1a0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C5LAR", 0x1a4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C5TBR", 0x1a8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C5MAR", 0x1b0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C5MDR", 0x1b4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C6ISR", 0x1c0, 32, [
      Field<"TEIF6", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF6", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF6", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF6", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF6", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA6", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C6IFCR", 0x1c4, 32, [
      Field<"CTEIF6", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF6", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF6", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF6", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF6", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C6ESR", 0x1c8, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C6CR", 0x1cc, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C6TCR", 0x1d0, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C6BNDTR", 0x1d4, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C6SAR", 0x1d8, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C6DAR", 0x1dc, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C6BRUR", 0x1e0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C6LAR", 0x1e4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C6TBR", 0x1e8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C6MAR", 0x1f0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C6MDR", 0x1f4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C7ISR", 0x200, 32, [
      Field<"TEIF7", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF7", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF7", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF7", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF7", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA7", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C7IFCR", 0x204, 32, [
      Field<"CTEIF7", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF7", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF7", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF7", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF7", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C7ESR", 0x208, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C7CR", 0x20c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C7TCR", 0x210, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C7BNDTR", 0x214, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C7SAR", 0x218, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C7DAR", 0x21c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C7BRUR", 0x220, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C7LAR", 0x224, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C7TBR", 0x228, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C7MAR", 0x230, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C7MDR", 0x234, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C8ISR", 0x240, 32, [
      Field<"TEIF8", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF8", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF8", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF8", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF8", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA8", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C8IFCR", 0x244, 32, [
      Field<"CTEIF8", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF8", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF8", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF8", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF8", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C8ESR", 0x248, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C8CR", 0x24c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C8TCR", 0x250, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C8BNDTR", 0x254, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C8SAR", 0x258, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C8DAR", 0x25c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C8BRUR", 0x260, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C8LAR", 0x264, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C8TBR", 0x268, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C8MAR", 0x270, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C8MDR", 0x274, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C9ISR", 0x280, 32, [
      Field<"TEIF9", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF9", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF9", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF9", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF9", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA9", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C9IFCR", 0x284, 32, [
      Field<"CTEIF9", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF9", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF9", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF9", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF9", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C9ESR", 0x288, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C9CR", 0x28c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C9TCR", 0x290, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C9BNDTR", 0x294, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C9SAR", 0x298, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C9DAR", 0x29c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C9BRUR", 0x2a0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C9LAR", 0x2a4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C9TBR", 0x2a8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C9MAR", 0x2b0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C9MDR", 0x2b4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C10ISR", 0x2c0, 32, [
      Field<"TEIF10", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF10", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF10", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF10", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF10", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA10", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C10IFCR", 0x2c4, 32, [
      Field<"CTEIF10", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF10", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF10", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF10", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF10", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C10ESR", 0x2c8, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C10CR", 0x2cc, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C10TCR", 0x2d0, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C10BNDTR", 0x2d4, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C10SAR", 0x2d8, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C10DAR", 0x2dc, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C10BRUR", 0x2e0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C10LAR", 0x2e4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C10TBR", 0x2e8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C10MAR", 0x2f0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C10MDR", 0x2f4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C11ISR", 0x300, 32, [
      Field<"TEIF11", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF11", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF11", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF11", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF11", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA11", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C11IFCR", 0x304, 32, [
      Field<"CTEIF11", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF11", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF11", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF11", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF11", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C11ESR", 0x308, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C11CR", 0x30c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C11TCR", 0x310, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C11BNDTR", 0x314, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C11SAR", 0x318, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C11DAR", 0x31c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C11BRUR", 0x320, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C11LAR", 0x324, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C11TBR", 0x328, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C11MAR", 0x330, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C11MDR", 0x334, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C12ISR", 0x340, 32, [
      Field<"TEIF12", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF12", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF12", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF12", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF12", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA12", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C12IFCR", 0x344, 32, [
      Field<"CTEIF12", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF12", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF12", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF12", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF12", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C12ESR", 0x348, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C12CR", 0x34c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C12TCR", 0x350, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C12BNDTR", 0x354, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C12SAR", 0x358, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C12DAR", 0x35c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C12BRUR", 0x360, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C12LAR", 0x364, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C12TBR", 0x368, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C12MAR", 0x370, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C12MDR", 0x374, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C13ISR", 0x380, 32, [
      Field<"TEIF13", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF13", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF13", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF13", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF13", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA13", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C13IFCR", 0x384, 32, [
      Field<"CTEIF13", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF13", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF13", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF13", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF13", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C13ESR", 0x388, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C13CR", 0x38c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C13TCR", 0x390, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C13BNDTR", 0x394, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C13SAR", 0x398, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C13DAR", 0x39c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C13BRUR", 0x3a0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C13LAR", 0x3a4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C13TBR", 0x3a8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C13MAR", 0x3b0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C13MDR", 0x3b4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C14ISR", 0x3c0, 32, [
      Field<"TEIF14", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF14", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF14", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF14", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF14", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA14", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C14IFCR", 0x3c4, 32, [
      Field<"CTEIF14", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF14", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF14", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF14", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF14", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C14ESR", 0x3c8, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C14CR", 0x3cc, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C14TCR", 0x3d0, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C14BNDTR", 0x3d4, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C14SAR", 0x3d8, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C14DAR", 0x3dc, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C14BRUR", 0x3e0, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C14LAR", 0x3e4, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C14TBR", 0x3e8, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C14MAR", 0x3f0, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C14MDR", 0x3f4, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
    Register<"MDMA_C15ISR", 0x400, 32, [
      Field<"TEIF15", 0, 1, ReadWrite, "Channel x transfer error interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"CTCIF15", 1, 1, ReadWrite, "Channel x Channel Transfer Complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register. CTC is set when the last block was transferred and the channel has been automatically disabled. CTC is also set when the channel is suspended, as a result of writing EN bit to 0.">,
      Field<"BRTIF15", 2, 1, ReadWrite, "Channel x block repeat transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"BTIF15", 3, 1, ReadWrite, "Channel x block transfer complete interrupt flag This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCRy register.">,
      Field<"TCIF15", 4, 1, ReadWrite, "channel x buffer transfer complete">,
      Field<"CRQA15", 16, 1, ReadWrite, "channel x request active flag">,
    ], "MDMA channel x interrupt/status register">,
    Register<"MDMA_C15IFCR", 0x404, 32, [
      Field<"CTEIF15", 0, 1, ReadWrite, "Channel x clear transfer error interrupt flag Writing a 1 into this bit clears TEIFx in the MDMA_ISRy register">,
      Field<"CCTCIF15", 1, 1, ReadWrite, "Clear Channel transfer complete interrupt flag for channel x Writing a 1 into this bit clears CTCIFx in the MDMA_ISRy register">,
      Field<"CBRTIF15", 2, 1, ReadWrite, "Channel x clear block repeat transfer complete interrupt flag Writing a 1 into this bit clears BRTIFx in the MDMA_ISRy register">,
      Field<"CBTIF15", 3, 1, ReadWrite, "Channel x Clear block transfer complete interrupt flag Writing a 1 into this bit clears BTIFx in the MDMA_ISRy register">,
      Field<"CLTCIF15", 4, 1, ReadWrite, "CLear buffer Transfer Complete Interrupt Flag for channel x Writing a 1 into this bit clears TCIFx in the MDMA_ISRy register">,
    ], "MDMA channel x interrupt flag clear register">,
    Register<"MDMA_C15ESR", 0x408, 32, [
      Field<"TEA", 0, 7, ReadWrite, "Transfer Error Address These bits are set and cleared by HW, in case of an MDMA data transfer error. It is used in conjunction with TED. This field indicates the 7 LSBits of the address which generated a transfer/access error. It may be used by SW to retrieve the failing address, by adding this value (truncated to the buffer transfer length size) to the current SAR/DAR value. Note: The SAR/DAR current value doesnt reflect this last address due to the FIFO management system. The SAR/DAR are only updated at the end of a (buffer) transfer (of TLEN+1 bytes). Note: It is not set in case of a link data error.">,
      Field<"TED", 7, 1, ReadWrite, "Transfer Error Direction These bit is set and cleared by HW, in case of an MDMA data transfer error.">,
      Field<"TELD", 8, 1, ReadWrite, "Transfer Error Link Data These bit is set by HW, in case of a transfer error while reading the block link data structure. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"TEMD", 9, 1, ReadWrite, "Transfer Error Mask Data These bit is set by HW, in case of a transfer error while writing the Mask Data. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"ASE", 10, 1, ReadWrite, "Address/Size Error These bit is set by HW, when the programmed address is not aligned with the data size. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
      Field<"BSE", 11, 1, ReadWrite, "Block Size Error These bit is set by HW, when the block size is not an integer multiple of the data size either for source or destination. TED will indicate whether the problem is on the source or destination. It is cleared by software writing 1 to the CTEIFx bit in the DMA_IFCRy register.">,
    ], "MDMA Channel x error status register">,
    Register<"MDMA_C15CR", 0x40c, 32, [
      Field<"EN", 0, 1, ReadWrite, "channel enable">,
      Field<"TEIE", 1, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"CTCIE", 2, 1, ReadWrite, "Channel Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"BRTIE", 3, 1, ReadWrite, "Block Repeat transfer interrupt enable This bit is set and cleared by software.">,
      Field<"BTIE", 4, 1, ReadWrite, "Block Transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TCIE", 5, 1, ReadWrite, "buffer Transfer Complete interrupt enable This bit is set and cleared by software.">,
      Field<"PL", 6, 2, ReadWrite, "Priority level These bits are set and cleared by software. These bits are protected and can be written only if EN is 0.">,
      Field<"BEX", 12, 1, ReadWrite, "byte Endianness exchange">,
      Field<"HEX", 13, 1, ReadWrite, "Half word Endianes exchange">,
      Field<"WEX", 14, 1, ReadWrite, "Word Endianness exchange">,
      Field<"SWRQ", 16, 1, Write, "SW ReQuest Writing a 1 into this bit sets the CRQAx in MDMA_ISRy register, activating the request on Channel x Note: Either the whole CxCR register or the 8-bit/16-bit register @ Address offset: 0x4E + 0x40 chn may be used for SWRQ activation. In case of a SW request, acknowledge is not generated (neither HW signal, nor CxMAR write access).">,
    ], "This register is used to control the concerned channel.">,
    Register<"MDMA_C15TCR", 0x410, 32, [
      Field<"SINC", 0, 2, ReadWrite, "Source increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When source is AHB (SBUS=1), SINC = 00 is forbidden. In Linked List Mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).">,
      Field<"DINC", 2, 2, ReadWrite, "Destination increment mode These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: When destination is AHB (DBUS=1), DINC = 00 is forbidden.">,
      Field<"SSIZE", 4, 2, ReadWrite, "Source data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0 Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If SINCOS &lt; SSIZE and SINC &#8800; 00, the result will be unpredictable. Note: SSIZE = 11 (double-word) is forbidden when source is TCM/AHB bus (SBUS=1).">,
      Field<"DSIZE", 6, 2, ReadWrite, "Destination data size These bits are set and cleared by software. These bits are protected and can be written only if EN is 0. Note: If a value of 11 is programmed for the TCM access/AHB port, a transfer error will occur (TEIF bit set) If DINCOS &lt; DSIZE and DINC &#8800; 00, the result will be unpredictable. Note: DSIZE = 11 (double-word) is forbidden when destination is TCM/AHB bus (DBUS=1).">,
      Field<"SINCOS", 8, 2, ReadWrite, "source increment offset size">,
      Field<"DINCOS", 10, 2, ReadWrite, "Destination increment offset">,
      Field<"SBURST", 12, 3, ReadWrite, "source burst transfer configuration">,
      Field<"DBURST", 15, 3, ReadWrite, "Destination burst transfer configuration">,
      Field<"TLEN", 18, 7, ReadWrite, "buffer transfer lengh">,
      Field<"PKE", 25, 1, ReadWrite, "PacK Enable These bit is set and cleared by software. If the Source Size is smaller than the destination, it will be padded according to the PAM value. If the Source data size is larger than the destination one, it will be truncated. The alignment will be done according to the PAM[0] value. This bit is protected and can be written only if EN is 0">,
      Field<"PAM", 26, 2, ReadWrite, "Padding/Alignement Mode These bits are set and cleared by software. Case 1: Source data size smaller than destination data size - 3 options are valid. Case 2: Source data size larger than destination data size. The remainder part is discarded. When PKE = 1 or DSIZE=SSIZE, these bits are ignored. These bits are protected and can be written only if EN is 0">,
      Field<"TRGM", 28, 2, ReadWrite, "Trigger Mode These bits are set and cleared by software. Note: If TRGM is 11 for the current block, all the values loaded at the end of the current block through the linked list mechanism must keep the same value (TRGM=11) and the same SWRM value, otherwise the result is undefined. These bits are protected and can be written only if EN is 0.">,
      Field<"SWRM", 30, 1, ReadWrite, "SW Request Mode This bit is set and cleared by software. If a HW or SW request is currently active, the bit change will be delayed until the current transfer is completed. If the CxMAR contains a valid address, the CxMDR value will also be written @ CxMAR address. This bit is protected and can be written only if EN is 0.">,
      Field<"BWM", 31, 1, ReadWrite, "Bufferable Write Mode This bit is set and cleared by software. This bit is protected and can be written only if EN is 0. Note: All MDMA destination accesses are non-cacheable.">,
    ], "This register is used to configure the concerned channel.">,
    Register<"MDMA_C15BNDTR", 0x414, 32, [
      Field<"BNDT", 0, 17, ReadWrite, "block number of data to transfer">,
      Field<"BRSUM", 18, 1, ReadWrite, "Block Repeat Source address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRDUM", 19, 1, ReadWrite, "Block Repeat Destination address Update Mode These bits are protected and can be written only if EN is 0.">,
      Field<"BRC", 20, 12, ReadWrite, "Block Repeat Count This field contains the number of repetitions of the current block (0 to 4095). When the channel is enabled, this register is read-only, indicating the remaining number of blocks, excluding the current one. This register decrements after each complete block transfer. Once the last block transfer has completed, this register can either stay at zero or be reloaded automatically from memory (in Linked List mode - i.e. Link Address valid). These bits are protected and can be written only if EN is 0.">,
    ], "MDMA Channel x block number of data register">,
    Register<"MDMA_C15SAR", 0x418, 32, [
      Field<"SAR", 0, 32, ReadWrite, "source adr base">,
    ], "MDMA channel x source address register">,
    Register<"MDMA_C15DAR", 0x41c, 32, [
      Field<"DAR", 0, 32, ReadWrite, "Destination adr base">,
    ], "MDMA channel x destination address register">,
    Register<"MDMA_C15BRUR", 0x420, 32, [
      Field<"SUV", 0, 16, ReadWrite, "source adresse update value">,
      Field<"DUV", 16, 16, ReadWrite, "destination address update">,
    ], "MDMA channel x Block Repeat address Update register">,
    Register<"MDMA_C15LAR", 0x424, 32, [
      Field<"LAR", 0, 32, ReadWrite, "Link address register">,
    ], "MDMA channel x Link Address register">,
    Register<"MDMA_C15TBR", 0x428, 32, [
      Field<"TSEL", 0, 6, ReadWrite, "Trigger selection">,
      Field<"SBUS", 16, 1, ReadWrite, "Source BUS select This bit is protected and can be written only if EN is 0.">,
      Field<"DBUS", 17, 1, ReadWrite, "Destination BUS slect This bit is protected and can be written only if EN is 0.">,
    ], "MDMA channel x Trigger and Bus selection Register">,
    Register<"MDMA_C15MAR", 0x430, 32, [
      Field<"MAR", 0, 32, ReadWrite, "Mask address">,
    ], "MDMA channel x Mask address register">,
    Register<"MDMA_C15MDR", 0x434, 32, [
      Field<"MDR", 0, 32, ReadWrite, "Mask data">,
    ], "MDMA channel x Mask Data register">,
  ];
}

class MDMAInstance<string Name, int Base> : PeripheralInstance<Name, Base, MDMAPeripheral>;
def MDMA : MDMAInstance<"MDMA", 0x52000000>;

#endif // _PERIPHERALS_MDMA_TD
