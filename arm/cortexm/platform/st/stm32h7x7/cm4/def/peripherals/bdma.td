#ifndef _PERIPHERALS_BDMA_TD
#define _PERIPHERALS_BDMA_TD

include "base.td"

def BDMAPeripheral : PeripheralType<"BDMA", "BDMA"> {
  let accessWidth = 32;
  let registers = [
    Register<"ISR", 0x0, 32, [
      Field<"GIF1", 0, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF1", 1, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF1", 2, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF1", 3, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF2", 4, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF2", 5, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF2", 6, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF2", 7, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF3", 8, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF3", 9, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF3", 10, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF3", 11, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF4", 12, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF4", 13, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF4", 14, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF4", 15, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF5", 16, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF5", 17, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF5", 18, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF5", 19, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF6", 20, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF6", 21, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF6", 22, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF6", 23, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF7", 24, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF7", 25, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF7", 26, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF7", 27, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"GIF8", 28, 1, ReadWrite, "Channel x global interrupt flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TCIF8", 29, 1, ReadWrite, "Channel x transfer complete flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"HTIF8", 30, 1, ReadWrite, "Channel x half transfer flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
      Field<"TEIF8", 31, 1, ReadWrite, "Channel x transfer error flag (x = 1..8) This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.">,
    ], "DMA interrupt status register">,
    Register<"IFCR", 0x4, 32, [
      Field<"CGIF1", 0, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF1", 1, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF1", 2, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF1", 3, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF2", 4, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF2", 5, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF2", 6, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF2", 7, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF3", 8, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF3", 9, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF3", 10, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF3", 11, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF4", 12, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF4", 13, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF4", 14, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF4", 15, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF5", 16, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF5", 17, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF5", 18, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF5", 19, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF6", 20, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF6", 21, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF6", 22, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF6", 23, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF7", 24, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF7", 25, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF7", 26, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF7", 27, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
      Field<"CGIF8", 28, 1, ReadWrite, "Channel x global interrupt clear This bit is set and cleared by software.">,
      Field<"CTCIF8", 29, 1, ReadWrite, "Channel x transfer complete clear This bit is set and cleared by software.">,
      Field<"CHTIF8", 30, 1, ReadWrite, "Channel x half transfer clear This bit is set and cleared by software.">,
      Field<"CTEIF8", 31, 1, ReadWrite, "Channel x transfer error clear This bit is set and cleared by software.">,
    ], "DMA interrupt flag clear register">,
    Register<"CCR1", 0x8, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR1", 0xc, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR1", 0x10, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR1", 0x14, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR2", 0x1c, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR2", 0x20, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR2", 0x24, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR2", 0x28, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR3", 0x30, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR3", 0x34, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR3", 0x38, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR3", 0x3c, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR4", 0x44, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR4", 0x48, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR4", 0x4c, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR4", 0x50, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR5", 0x58, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR5", 0x5c, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR5", 0x60, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR5", 0x64, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR6", 0x6c, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR6", 0x70, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR6", 0x74, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR6", 0x78, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR7", 0x80, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR7", 0x84, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR7", 0x88, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR7", 0x8c, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CCR8", 0x94, 32, [
      Field<"EN", 0, 1, ReadWrite, "Channel enable This bit is set and cleared by software.">,
      Field<"TCIE", 1, 1, ReadWrite, "Transfer complete interrupt enable This bit is set and cleared by software.">,
      Field<"HTIE", 2, 1, ReadWrite, "Half transfer interrupt enable This bit is set and cleared by software.">,
      Field<"TEIE", 3, 1, ReadWrite, "Transfer error interrupt enable This bit is set and cleared by software.">,
      Field<"DIR", 4, 1, ReadWrite, "Data transfer direction This bit is set and cleared by software.">,
      Field<"CIRC", 5, 1, ReadWrite, "Circular mode This bit is set and cleared by software.">,
      Field<"PINC", 6, 1, ReadWrite, "Peripheral increment mode This bit is set and cleared by software.">,
      Field<"MINC", 7, 1, ReadWrite, "Memory increment mode This bit is set and cleared by software.">,
      Field<"PSIZE", 8, 2, ReadWrite, "Peripheral size These bits are set and cleared by software.">,
      Field<"MSIZE", 10, 2, ReadWrite, "Memory size These bits are set and cleared by software.">,
      Field<"PL", 12, 2, ReadWrite, "Channel priority level These bits are set and cleared by software.">,
      Field<"MEM2MEM", 14, 1, ReadWrite, "Memory to memory mode This bit is set and cleared by software.">,
    ], "DMA channel x configuration register">,
    Register<"CNDTR8", 0x98, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data to transfer Number of data to be transferred (0 up to 65535). This register can only be written when the channel is disabled. Once the channel is enabled, this register is read-only, indicating the remaining bytes to be transmitted. This register decrements after each DMA transfer. Once the transfer is completed, this register can either stay at zero or be reloaded automatically by the value previously programmed if the channel is configured in auto-reload mode. If this register is zero, no transaction can be served whether the channel is enabled or not.">,
    ], "DMA channel x number of data register">,
    Register<"CPAR8", 0x9c, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address Base address of the peripheral data register from/to which the data will be read/written. When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a half-word address. When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
    Register<"CMAR8", 0xa0, 32, [
      Field<"MA", 0, 32, ReadWrite, "Memory address Base address of the memory area from/to which the data will be read/written. When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a half-word address. When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word address.">,
    ], "This register must not be written when the channel is enabled.">,
  ];
}

class BDMAInstance<string Name, int Base> : PeripheralInstance<Name, Base, BDMAPeripheral>;
def BDMA : BDMAInstance<"BDMA", 0x58025400>;

#endif // _PERIPHERALS_BDMA_TD
