#ifndef _PERIPHERALS_DMA1_TD
#define _PERIPHERALS_DMA1_TD

include "base.td"

def DMA1Peripheral : PeripheralType<"DMA1", "DMA controller"> {
  let accessWidth = 32;
  let registers = [
    Register<"LISR", 0x0, 32, [
      Field<"FEIF0", 0, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=3..0)">,
      Field<"DMEIF0", 2, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=3..0)">,
      Field<"TEIF0", 3, 1, ReadWrite, "Stream x transfer error interrupt flag (x=3..0)">,
      Field<"HTIF0", 4, 1, ReadWrite, "Stream x half transfer interrupt flag (x=3..0)">,
      Field<"TCIF0", 5, 1, ReadWrite, "Stream x transfer complete interrupt flag (x = 3..0)">,
      Field<"FEIF1", 6, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=3..0)">,
      Field<"DMEIF1", 8, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=3..0)">,
      Field<"TEIF1", 9, 1, ReadWrite, "Stream x transfer error interrupt flag (x=3..0)">,
      Field<"HTIF1", 10, 1, ReadWrite, "Stream x half transfer interrupt flag (x=3..0)">,
      Field<"TCIF1", 11, 1, ReadWrite, "Stream x transfer complete interrupt flag (x = 3..0)">,
      Field<"FEIF2", 16, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=3..0)">,
      Field<"DMEIF2", 18, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=3..0)">,
      Field<"TEIF2", 19, 1, ReadWrite, "Stream x transfer error interrupt flag (x=3..0)">,
      Field<"HTIF2", 20, 1, ReadWrite, "Stream x half transfer interrupt flag (x=3..0)">,
      Field<"TCIF2", 21, 1, ReadWrite, "Stream x transfer complete interrupt flag (x = 3..0)">,
      Field<"FEIF3", 22, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=3..0)">,
      Field<"DMEIF3", 24, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=3..0)">,
      Field<"TEIF3", 25, 1, ReadWrite, "Stream x transfer error interrupt flag (x=3..0)">,
      Field<"HTIF3", 26, 1, ReadWrite, "Stream x half transfer interrupt flag (x=3..0)">,
      Field<"TCIF3", 27, 1, ReadWrite, "Stream x transfer complete interrupt flag (x = 3..0)">,
    ], "low interrupt status register">,
    Register<"HISR", 0x4, 32, [
      Field<"FEIF4", 0, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=7..4)">,
      Field<"DMEIF4", 2, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=7..4)">,
      Field<"TEIF4", 3, 1, ReadWrite, "Stream x transfer error interrupt flag (x=7..4)">,
      Field<"HTIF4", 4, 1, ReadWrite, "Stream x half transfer interrupt flag (x=7..4)">,
      Field<"TCIF4", 5, 1, ReadWrite, "Stream x transfer complete interrupt flag (x=7..4)">,
      Field<"FEIF5", 6, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=7..4)">,
      Field<"DMEIF5", 8, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=7..4)">,
      Field<"TEIF5", 9, 1, ReadWrite, "Stream x transfer error interrupt flag (x=7..4)">,
      Field<"HTIF5", 10, 1, ReadWrite, "Stream x half transfer interrupt flag (x=7..4)">,
      Field<"TCIF5", 11, 1, ReadWrite, "Stream x transfer complete interrupt flag (x=7..4)">,
      Field<"FEIF6", 16, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=7..4)">,
      Field<"DMEIF6", 18, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=7..4)">,
      Field<"TEIF6", 19, 1, ReadWrite, "Stream x transfer error interrupt flag (x=7..4)">,
      Field<"HTIF6", 20, 1, ReadWrite, "Stream x half transfer interrupt flag (x=7..4)">,
      Field<"TCIF6", 21, 1, ReadWrite, "Stream x transfer complete interrupt flag (x=7..4)">,
      Field<"FEIF7", 22, 1, ReadWrite, "Stream x FIFO error interrupt flag (x=7..4)">,
      Field<"DMEIF7", 24, 1, ReadWrite, "Stream x direct mode error interrupt flag (x=7..4)">,
      Field<"TEIF7", 25, 1, ReadWrite, "Stream x transfer error interrupt flag (x=7..4)">,
      Field<"HTIF7", 26, 1, ReadWrite, "Stream x half transfer interrupt flag (x=7..4)">,
      Field<"TCIF7", 27, 1, ReadWrite, "Stream x transfer complete interrupt flag (x=7..4)">,
    ], "high interrupt status register">,
    Register<"LIFCR", 0x8, 32, [
      Field<"CFEIF0", 0, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 3..0)">,
      Field<"CDMEIF0", 2, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 3..0)">,
      Field<"CTEIF0", 3, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 3..0)">,
      Field<"CHTIF0", 4, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 3..0)">,
      Field<"CTCIF0", 5, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 3..0)">,
      Field<"CFEIF1", 6, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 3..0)">,
      Field<"CDMEIF1", 8, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 3..0)">,
      Field<"CTEIF1", 9, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 3..0)">,
      Field<"CHTIF1", 10, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 3..0)">,
      Field<"CTCIF1", 11, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 3..0)">,
      Field<"CFEIF2", 16, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 3..0)">,
      Field<"CDMEIF2", 18, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 3..0)">,
      Field<"CTEIF2", 19, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 3..0)">,
      Field<"CHTIF2", 20, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 3..0)">,
      Field<"CTCIF2", 21, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 3..0)">,
      Field<"CFEIF3", 22, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 3..0)">,
      Field<"CDMEIF3", 24, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 3..0)">,
      Field<"CTEIF3", 25, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 3..0)">,
      Field<"CHTIF3", 26, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 3..0)">,
      Field<"CTCIF3", 27, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 3..0)">,
    ], "low interrupt flag clear register">,
    Register<"HIFCR", 0xc, 32, [
      Field<"CFEIF4", 0, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 7..4)">,
      Field<"CDMEIF4", 2, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 7..4)">,
      Field<"CTEIF4", 3, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 7..4)">,
      Field<"CHTIF4", 4, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 7..4)">,
      Field<"CTCIF4", 5, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 7..4)">,
      Field<"CFEIF5", 6, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 7..4)">,
      Field<"CDMEIF5", 8, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 7..4)">,
      Field<"CTEIF5", 9, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 7..4)">,
      Field<"CHTIF5", 10, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 7..4)">,
      Field<"CTCIF5", 11, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 7..4)">,
      Field<"CFEIF6", 16, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 7..4)">,
      Field<"CDMEIF6", 18, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 7..4)">,
      Field<"CTEIF6", 19, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 7..4)">,
      Field<"CHTIF6", 20, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 7..4)">,
      Field<"CTCIF6", 21, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 7..4)">,
      Field<"CFEIF7", 22, 1, ReadWrite, "Stream x clear FIFO error interrupt flag (x = 7..4)">,
      Field<"CDMEIF7", 24, 1, ReadWrite, "Stream x clear direct mode error interrupt flag (x = 7..4)">,
      Field<"CTEIF7", 25, 1, ReadWrite, "Stream x clear transfer error interrupt flag (x = 7..4)">,
      Field<"CHTIF7", 26, 1, ReadWrite, "Stream x clear half transfer interrupt flag (x = 7..4)">,
      Field<"CTCIF7", 27, 1, ReadWrite, "Stream x clear transfer complete interrupt flag (x = 7..4)">,
    ], "high interrupt flag clear register">,
    Register<"S0CR", 0x10, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S0NDTR", 0x14, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S0PAR", 0x18, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S0M0AR", 0x1c, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S0M1AR", 0x20, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S0FCR", 0x24, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S1CR", 0x28, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S1NDTR", 0x2c, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S1PAR", 0x30, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S1M0AR", 0x34, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S1M1AR", 0x38, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S1FCR", 0x3c, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S2CR", 0x40, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S2NDTR", 0x44, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S2PAR", 0x48, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S2M0AR", 0x4c, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S2M1AR", 0x50, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S2FCR", 0x54, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S3CR", 0x58, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S3NDTR", 0x5c, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S3PAR", 0x60, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S3M0AR", 0x64, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S3M1AR", 0x68, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S3FCR", 0x6c, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S4CR", 0x70, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S4NDTR", 0x74, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S4PAR", 0x78, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S4M0AR", 0x7c, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S4M1AR", 0x80, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S4FCR", 0x84, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S5CR", 0x88, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S5NDTR", 0x8c, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S5PAR", 0x90, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S5M0AR", 0x94, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S5M1AR", 0x98, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S5FCR", 0x9c, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S6CR", 0xa0, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S6NDTR", 0xa4, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S6PAR", 0xa8, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S6M0AR", 0xac, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S6M1AR", 0xb0, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S6FCR", 0xb4, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
    Register<"S7CR", 0xb8, 32, [
      Field<"EN", 0, 1, ReadWrite, "Stream enable / flag stream ready when read low">,
      Field<"DMEIE", 1, 1, ReadWrite, "Direct mode error interrupt enable">,
      Field<"TEIE", 2, 1, ReadWrite, "Transfer error interrupt enable">,
      Field<"HTIE", 3, 1, ReadWrite, "Half transfer interrupt enable">,
      Field<"TCIE", 4, 1, ReadWrite, "Transfer complete interrupt enable">,
      Field<"PFCTRL", 5, 1, ReadWrite, "Peripheral flow controller">,
      Field<"DIR", 6, 2, ReadWrite, "Data transfer direction">,
      Field<"CIRC", 8, 1, ReadWrite, "Circular mode">,
      Field<"PINC", 9, 1, ReadWrite, "Peripheral increment mode">,
      Field<"MINC", 10, 1, ReadWrite, "Memory increment mode">,
      Field<"PSIZE", 11, 2, ReadWrite, "Peripheral data size">,
      Field<"MSIZE", 13, 2, ReadWrite, "Memory data size">,
      Field<"PINCOS", 15, 1, ReadWrite, "Peripheral increment offset size">,
      Field<"PL", 16, 2, ReadWrite, "Priority level">,
      Field<"DBM", 18, 1, ReadWrite, "Double buffer mode">,
      Field<"CT", 19, 1, ReadWrite, "Current target (only in double buffer mode)">,
      Field<"ACK", 20, 1, ReadWrite, "ACK">,
      Field<"PBURST", 21, 2, ReadWrite, "Peripheral burst transfer configuration">,
      Field<"MBURST", 23, 2, ReadWrite, "Memory burst transfer configuration">,
    ], "stream x configuration register">,
    Register<"S7NDTR", 0xbc, 32, [
      Field<"NDT", 0, 16, ReadWrite, "Number of data items to transfer">,
    ], "stream x number of data register">,
    Register<"S7PAR", 0xc0, 32, [
      Field<"PA", 0, 32, ReadWrite, "Peripheral address">,
    ], "stream x peripheral address register">,
    Register<"S7M0AR", 0xc4, 32, [
      Field<"M0A", 0, 32, ReadWrite, "Memory 0 address">,
    ], "stream x memory 0 address register">,
    Register<"S7M1AR", 0xc8, 32, [
      Field<"M1A", 0, 32, ReadWrite, "Memory 1 address (used in case of Double buffer mode)">,
    ], "stream x memory 1 address register">,
    Register<"S7FCR", 0xcc, 32, [
      Field<"FTH", 0, 2, ReadWrite, "FIFO threshold selection">,
      Field<"DMDIS", 2, 1, ReadWrite, "Direct mode disable">,
      Field<"FS", 3, 3, Read, "FIFO status">,
      Field<"FEIE", 7, 1, ReadWrite, "FIFO error interrupt enable">,
    ], "stream x FIFO control register">,
  ];
}

class DMA1Instance<string Name, int Base> : PeripheralInstance<Name, Base, DMA1Peripheral>;
def DMA1 : DMA1Instance<"DMA1", 0x40020000>;
def DMA2 : DMA1Instance<"DMA2", 0x40020400>;

#endif // _PERIPHERALS_DMA1_TD
