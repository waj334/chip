#ifndef _PERIPHERALS_TIM1_TD
#define _PERIPHERALS_TIM1_TD

include "base.td"

def TIM1Peripheral : PeripheralType<"TIM1", "Advanced-timers"> {
  let accessWidth = 32;
  let registers = [
    Register<"CR1", 0x0, 32, [
      Field<"CEN", 0, 1, ReadWrite, "Counter enable">,
      Field<"UDIS", 1, 1, ReadWrite, "Update disable">,
      Field<"URS", 2, 1, ReadWrite, "Update request source">,
      Field<"OPM", 3, 1, ReadWrite, "One-pulse mode">,
      Field<"DIR", 4, 1, ReadWrite, "Direction">,
      Field<"CMS", 5, 2, ReadWrite, "Center-aligned mode selection">,
      Field<"ARPE", 7, 1, ReadWrite, "Auto-reload preload enable">,
      Field<"CKD", 8, 2, ReadWrite, "Clock division">,
      Field<"UIFREMAP", 11, 1, ReadWrite, "UIF status bit remapping">,
    ], "control register 1">,
    Register<"CR2", 0x4, 32, [
      Field<"MMS2", 20, 4, ReadWrite, "Master mode selection 2">,
      Field<"OIS6", 18, 1, ReadWrite, "Output Idle state 6">,
      Field<"OIS5", 16, 1, ReadWrite, "Output Idle state 5">,
      Field<"OIS4", 14, 1, ReadWrite, "Output Idle state 4">,
      Field<"OIS3N", 13, 1, ReadWrite, "Output Idle state 3">,
      Field<"OIS3", 12, 1, ReadWrite, "Output Idle state 3">,
      Field<"OIS2N", 11, 1, ReadWrite, "Output Idle state 2">,
      Field<"OIS2", 10, 1, ReadWrite, "Output Idle state 2">,
      Field<"OIS1N", 9, 1, ReadWrite, "Output Idle state 1">,
      Field<"OIS1", 8, 1, ReadWrite, "Output Idle state 1">,
      Field<"TI1S", 7, 1, ReadWrite, "TI1 selection">,
      Field<"MMS", 4, 3, ReadWrite, "Master mode selection">,
      Field<"CCDS", 3, 1, ReadWrite, "Capture/compare DMA selection">,
      Field<"CCUS", 2, 1, ReadWrite, "Capture/compare control update selection">,
      Field<"CCPC", 0, 1, ReadWrite, "Capture/compare preloaded control">,
    ], "control register 2">,
    Register<"SMCR", 0x8, 32, [
      Field<"SMS", 0, 3, ReadWrite, "Slave mode selection">,
      Field<"TS", 4, 3, ReadWrite, "Trigger selection">,
      Field<"MSM", 7, 1, ReadWrite, "Master/Slave mode">,
      Field<"ETF", 8, 4, ReadWrite, "External trigger filter">,
      Field<"ETPS", 12, 2, ReadWrite, "External trigger prescaler">,
      Field<"ECE", 14, 1, ReadWrite, "External clock enable">,
      Field<"ETP", 15, 1, ReadWrite, "External trigger polarity">,
      Field<"SMS_3", 16, 1, ReadWrite, "Slave mode selection - bit 3">,
      Field<"TS_4_3", 20, 2, ReadWrite, "Trigger selection - bit 4:3">,
    ], "slave mode control register">,
    Register<"DIER", 0xc, 32, [
      Field<"TDE", 14, 1, ReadWrite, "Trigger DMA request enable">,
      Field<"COMDE", 13, 1, ReadWrite, "COM DMA request enable">,
      Field<"CC4DE", 12, 1, ReadWrite, "Capture/Compare 4 DMA request enable">,
      Field<"CC3DE", 11, 1, ReadWrite, "Capture/Compare 3 DMA request enable">,
      Field<"CC2DE", 10, 1, ReadWrite, "Capture/Compare 2 DMA request enable">,
      Field<"CC1DE", 9, 1, ReadWrite, "Capture/Compare 1 DMA request enable">,
      Field<"UDE", 8, 1, ReadWrite, "Update DMA request enable">,
      Field<"TIE", 6, 1, ReadWrite, "Trigger interrupt enable">,
      Field<"CC4IE", 4, 1, ReadWrite, "Capture/Compare 4 interrupt enable">,
      Field<"CC3IE", 3, 1, ReadWrite, "Capture/Compare 3 interrupt enable">,
      Field<"CC2IE", 2, 1, ReadWrite, "Capture/Compare 2 interrupt enable">,
      Field<"CC1IE", 1, 1, ReadWrite, "Capture/Compare 1 interrupt enable">,
      Field<"UIE", 0, 1, ReadWrite, "Update interrupt enable">,
      Field<"BIE", 7, 1, ReadWrite, "Break interrupt enable">,
      Field<"COMIE", 5, 1, ReadWrite, "COM interrupt enable">,
    ], "DMA/Interrupt enable register">,
    Register<"SR", 0x10, 32, [
      Field<"CC6IF", 17, 1, ReadWrite, "Compare 6 interrupt flag">,
      Field<"CC5IF", 16, 1, ReadWrite, "Compare 5 interrupt flag">,
      Field<"SBIF", 13, 1, ReadWrite, "System Break interrupt flag">,
      Field<"CC4OF", 12, 1, ReadWrite, "Capture/Compare 4 overcapture flag">,
      Field<"CC3OF", 11, 1, ReadWrite, "Capture/Compare 3 overcapture flag">,
      Field<"CC2OF", 10, 1, ReadWrite, "Capture/compare 2 overcapture flag">,
      Field<"CC1OF", 9, 1, ReadWrite, "Capture/Compare 1 overcapture flag">,
      Field<"B2IF", 8, 1, ReadWrite, "Break 2 interrupt flag">,
      Field<"BIF", 7, 1, ReadWrite, "Break interrupt flag">,
      Field<"TIF", 6, 1, ReadWrite, "Trigger interrupt flag">,
      Field<"COMIF", 5, 1, ReadWrite, "COM interrupt flag">,
      Field<"CC4IF", 4, 1, ReadWrite, "Capture/Compare 4 interrupt flag">,
      Field<"CC3IF", 3, 1, ReadWrite, "Capture/Compare 3 interrupt flag">,
      Field<"CC2IF", 2, 1, ReadWrite, "Capture/Compare 2 interrupt flag">,
      Field<"CC1IF", 1, 1, ReadWrite, "Capture/compare 1 interrupt flag">,
      Field<"UIF", 0, 1, ReadWrite, "Update interrupt flag">,
    ], "status register">,
    Register<"EGR", 0x14, 32, [
      Field<"UG", 0, 1, ReadWrite, "Update generation">,
      Field<"CC1G", 1, 1, ReadWrite, "Capture/compare 1 generation">,
      Field<"CC2G", 2, 1, ReadWrite, "Capture/compare 2 generation">,
      Field<"CC3G", 3, 1, ReadWrite, "Capture/compare 3 generation">,
      Field<"CC4G", 4, 1, ReadWrite, "Capture/compare 4 generation">,
      Field<"COMG", 5, 1, ReadWrite, "Capture/Compare control update generation">,
      Field<"TG", 6, 1, ReadWrite, "Trigger generation">,
      Field<"BG", 7, 1, ReadWrite, "Break generation">,
      Field<"B2G", 8, 1, ReadWrite, "Break 2 generation">,
    ], "event generation register">,
    Register<"CCMR1_Output", 0x18, 32, [
      Field<"CC1S", 0, 2, ReadWrite, "Capture/Compare 1 selection">,
      Field<"OC1FE", 2, 1, ReadWrite, "Output Compare 1 fast enable">,
      Field<"OC1PE", 3, 1, ReadWrite, "Output Compare 1 preload enable">,
      Field<"OC1M", 4, 3, ReadWrite, "Output Compare 1 mode">,
      Field<"OC1CE", 7, 1, ReadWrite, "Output Compare 1 clear enable">,
      Field<"CC2S", 8, 2, ReadWrite, "Capture/Compare 2 selection">,
      Field<"OC2FE", 10, 1, ReadWrite, "Output Compare 2 fast enable">,
      Field<"OC2PE", 11, 1, ReadWrite, "Output Compare 2 preload enable">,
      Field<"OC2M", 12, 3, ReadWrite, "Output Compare 2 mode">,
      Field<"OC2CE", 15, 1, ReadWrite, "Output Compare 2 clear enable">,
      Field<"OC1M_3", 16, 1, ReadWrite, "Output Compare 1 mode - bit 3">,
      Field<"OC2M_3", 24, 1, ReadWrite, "Output Compare 2 mode - bit 3">,
    ], "capture/compare mode register 1 (output mode)">,
    Register<"CCMR1_Input", 0x18, 32, [
      Field<"IC2F", 12, 4, ReadWrite, "Input capture 2 filter">,
      Field<"IC2PCS", 10, 2, ReadWrite, "Input capture 2 prescaler">,
      Field<"CC2S", 8, 2, ReadWrite, "Capture/Compare 2 selection">,
      Field<"IC1F", 4, 4, ReadWrite, "Input capture 1 filter">,
      Field<"ICPCS", 2, 2, ReadWrite, "Input capture 1 prescaler">,
      Field<"CC1S", 0, 2, ReadWrite, "Capture/Compare 1 selection">,
    ], "capture/compare mode register 1 (input mode)">,
    Register<"CCMR2_Output", 0x1c, 32, [
      Field<"CC3S", 0, 2, ReadWrite, "Capture/Compare 3 selection">,
      Field<"OC3FE", 2, 1, ReadWrite, "Output compare 3 fast enable">,
      Field<"OC3PE", 3, 1, ReadWrite, "Output compare 3 preload enable">,
      Field<"OC3M", 4, 3, ReadWrite, "Output compare 3 mode">,
      Field<"OC3CE", 7, 1, ReadWrite, "Output compare 3 clear enable">,
      Field<"CC4S", 8, 2, ReadWrite, "Capture/Compare 4 selection">,
      Field<"OC4FE", 10, 1, ReadWrite, "Output compare 4 fast enable">,
      Field<"OC4PE", 11, 1, ReadWrite, "Output compare 4 preload enable">,
      Field<"OC4M", 12, 3, ReadWrite, "Output compare 4 mode">,
      Field<"OC4CE", 15, 1, ReadWrite, "Output compare 4 clear enable">,
      Field<"OC3M_3", 16, 1, ReadWrite, "Output Compare 3 mode - bit 3">,
      Field<"OC4M_4", 24, 1, ReadWrite, "Output Compare 4 mode - bit 3">,
    ], "capture/compare mode register 2 (output mode)">,
    Register<"CCMR2_Input", 0x1c, 32, [
      Field<"IC4F", 12, 4, ReadWrite, "Input capture 4 filter">,
      Field<"IC4PSC", 10, 2, ReadWrite, "Input capture 4 prescaler">,
      Field<"CC4S", 8, 2, ReadWrite, "Capture/Compare 4 selection">,
      Field<"IC3F", 4, 4, ReadWrite, "Input capture 3 filter">,
      Field<"IC3PSC", 2, 2, ReadWrite, "Input capture 3 prescaler">,
      Field<"CC3S", 0, 2, ReadWrite, "Capture/compare 3 selection">,
    ], "capture/compare mode register 2 (input mode)">,
    Register<"CCER", 0x20, 32, [
      Field<"CC1E", 0, 1, ReadWrite, "Capture/Compare 1 output enable">,
      Field<"CC1P", 1, 1, ReadWrite, "Capture/Compare 1 output Polarity">,
      Field<"CC1NE", 2, 1, ReadWrite, "Capture/Compare 1 complementary output enable">,
      Field<"CC1NP", 3, 1, ReadWrite, "Capture/Compare 1 output Polarity">,
      Field<"CC2E", 4, 1, ReadWrite, "Capture/Compare 2 output enable">,
      Field<"CC2P", 5, 1, ReadWrite, "Capture/Compare 2 output Polarity">,
      Field<"CC2NE", 6, 1, ReadWrite, "Capture/Compare 2 complementary output enable">,
      Field<"CC2NP", 7, 1, ReadWrite, "Capture/Compare 2 output Polarity">,
      Field<"CC3E", 8, 1, ReadWrite, "Capture/Compare 3 output enable">,
      Field<"CC3P", 9, 1, ReadWrite, "Capture/Compare 3 output Polarity">,
      Field<"CC3NE", 10, 1, ReadWrite, "Capture/Compare 3 complementary output enable">,
      Field<"CC3NP", 11, 1, ReadWrite, "Capture/Compare 3 output Polarity">,
      Field<"CC4E", 12, 1, ReadWrite, "Capture/Compare 4 output enable">,
      Field<"CC4P", 13, 1, ReadWrite, "Capture/Compare 3 output Polarity">,
      Field<"CC4NP", 15, 1, ReadWrite, "Capture/Compare 4 complementary output polarity">,
      Field<"CC5E", 16, 1, ReadWrite, "Capture/Compare 5 output enable">,
      Field<"CC5P", 17, 1, ReadWrite, "Capture/Compare 5 output polarity">,
      Field<"CC6E", 20, 1, ReadWrite, "Capture/Compare 6 output enable">,
      Field<"CC6P", 21, 1, ReadWrite, "Capture/Compare 6 output polarity">,
    ], "capture/compare enable register">,
    Register<"CNT", 0x24, 32, [
      Field<"CNT", 0, 16, ReadWrite, "counter value">,
      Field<"UIFCPY", 31, 1, Read, "UIF copy">,
    ], "counter">,
    Register<"PSC", 0x28, 32, [
      Field<"PSC", 0, 16, ReadWrite, "Prescaler value">,
    ], "prescaler">,
    Register<"ARR", 0x2c, 32, [
      Field<"ARR", 0, 16, ReadWrite, "Auto-reload value">,
    ], "auto-reload register">,
    Register<"CCR1", 0x34, 32, [
      Field<"CCR1", 0, 16, ReadWrite, "Capture/Compare 1 value">,
    ], "capture/compare register 1">,
    Register<"CCR2", 0x38, 32, [
      Field<"CCR2", 0, 16, ReadWrite, "Capture/Compare 2 value">,
    ], "capture/compare register 2">,
    Register<"CCR3", 0x3c, 32, [
      Field<"CCR3", 0, 16, ReadWrite, "Capture/Compare value">,
    ], "capture/compare register 3">,
    Register<"CCR4", 0x40, 32, [
      Field<"CCR4", 0, 16, ReadWrite, "Capture/Compare value">,
    ], "capture/compare register 4">,
    Register<"DCR", 0x48, 32, [
      Field<"DBL", 8, 5, ReadWrite, "DMA burst length">,
      Field<"DBA", 0, 5, ReadWrite, "DMA base address">,
    ], "DMA control register">,
    Register<"DMAR", 0x4c, 32, [
      Field<"DMAB", 0, 16, ReadWrite, "DMA register for burst accesses">,
    ], "DMA address for full transfer">,
    Register<"RCR", 0x30, 32, [
      Field<"REP", 0, 8, ReadWrite, "Repetition counter value">,
    ], "repetition counter register">,
    Register<"BDTR", 0x44, 32, [
      Field<"DTG", 0, 8, ReadWrite, "Dead-time generator setup">,
      Field<"LOCK", 8, 2, ReadWrite, "Lock configuration">,
      Field<"OSSI", 10, 1, ReadWrite, "Off-state selection for Idle mode">,
      Field<"OSSR", 11, 1, ReadWrite, "Off-state selection for Run mode">,
      Field<"BKE", 12, 1, ReadWrite, "Break enable">,
      Field<"BKP", 13, 1, ReadWrite, "Break polarity">,
      Field<"AOE", 14, 1, ReadWrite, "Automatic output enable">,
      Field<"MOE", 15, 1, ReadWrite, "Main output enable">,
      Field<"BKF", 16, 4, ReadWrite, "Break filter">,
      Field<"BK2F", 20, 4, ReadWrite, "Break 2 filter">,
      Field<"BK2E", 24, 1, ReadWrite, "Break 2 enable">,
      Field<"BK2P", 25, 1, ReadWrite, "Break 2 polarity">,
    ], "break and dead-time register">,
    Register<"CCMR3_Output", 0x54, 32, [
      Field<"OC5FE", 2, 1, ReadWrite, "Output compare 5 fast enable">,
      Field<"OC5PE", 3, 1, ReadWrite, "Output compare 5 preload enable">,
      Field<"OC5M", 4, 3, ReadWrite, "Output compare 5 mode">,
      Field<"OC5CE", 7, 1, ReadWrite, "Output compare 5 clear enable">,
      Field<"OC6FE", 10, 1, ReadWrite, "Output compare 6 fast enable">,
      Field<"OC6PE", 11, 1, ReadWrite, "Output compare 6 preload enable">,
      Field<"OC6M", 12, 3, ReadWrite, "Output compare 6 mode">,
      Field<"OC6CE", 15, 1, ReadWrite, "Output compare 6 clear enable">,
      Field<"OC5M3", 16, 1, ReadWrite, "Output Compare 5 mode">,
      Field<"OC6M3", 24, 1, ReadWrite, "Output Compare 6 mode">,
    ], "capture/compare mode register 3 (output mode)">,
    Register<"CCR5", 0x58, 32, [
      Field<"CCR5", 0, 16, ReadWrite, "Capture/Compare 5 value">,
      Field<"GC5C1", 29, 1, ReadWrite, "Group Channel 5 and Channel 1">,
      Field<"GC5C2", 30, 1, ReadWrite, "Group Channel 5 and Channel 2">,
      Field<"GC5C3", 31, 1, ReadWrite, "Group Channel 5 and Channel 3">,
    ], "capture/compare register 5">,
    Register<"CRR6", 0x5c, 32, [
      Field<"CCR6", 0, 16, ReadWrite, "Capture/Compare 6 value">,
    ], "capture/compare register 6">,
    Register<"AF1", 0x60, 32, [
      Field<"BKINE", 0, 1, ReadWrite, "BRK BKIN input enable">,
      Field<"BKCMP1E", 1, 1, ReadWrite, "BRK COMP1 enable">,
      Field<"BKCMP2E", 2, 1, ReadWrite, "BRK COMP2 enable">,
      Field<"BKDF1BK0E", 8, 1, ReadWrite, "BRK dfsdm1_break[0] enable">,
      Field<"BKINP", 9, 1, ReadWrite, "BRK BKIN input polarity">,
      Field<"BKCMP1P", 10, 1, ReadWrite, "BRK COMP1 input polarity">,
      Field<"BKCMP2P", 11, 1, ReadWrite, "BRK COMP2 input polarity">,
      Field<"ETRSEL", 14, 4, ReadWrite, "ETR source selection">,
    ], "TIM1 alternate function option register 1">,
    Register<"AF2", 0x64, 32, [
      Field<"BK2INE", 0, 1, ReadWrite, "BRK2 BKIN input enable">,
      Field<"BK2CMP1E", 1, 1, ReadWrite, "BRK2 COMP1 enable">,
      Field<"BK2CMP2E", 2, 1, ReadWrite, "BRK2 COMP2 enable">,
      Field<"BK2DF1BK1E", 8, 1, ReadWrite, "BRK2 dfsdm1_break[1] enable">,
      Field<"BK2INP", 9, 1, ReadWrite, "BRK2 BKIN2 input polarity">,
      Field<"BK2CMP1P", 10, 1, ReadWrite, "BRK2 COMP1 input polarit">,
      Field<"BK2CMP2P", 11, 1, ReadWrite, "BRK2 COMP2 input polarity">,
    ], "TIM1 Alternate function odfsdm1_breakster 2">,
    Register<"TISEL", 0x68, 32, [
      Field<"TI1SEL", 0, 4, ReadWrite, "selects TI1[0] to TI1[15] input">,
      Field<"TI2SEL", 8, 4, ReadWrite, "selects TI2[0] to TI2[15] input">,
      Field<"TI3SEL", 16, 4, ReadWrite, "selects TI3[0] to TI3[15] input">,
      Field<"TI4SEL", 24, 4, ReadWrite, "selects TI4[0] to TI4[15] input">,
    ], "TIM1 timer input selection register">,
  ];
}

class TIM1Instance<string Name, int Base> : PeripheralInstance<Name, Base, TIM1Peripheral>;
def TIM1 : TIM1Instance<"TIM1", 0x40010000>;
def TIM8 : TIM1Instance<"TIM8", 0x40010400>;

#endif // _PERIPHERALS_TIM1_TD
